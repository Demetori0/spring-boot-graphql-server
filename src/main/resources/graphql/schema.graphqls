type Author {
    id: ID!
    firstName: String!
    lastName: String!
}

type Book {
    id: ID!
    title: String!
    isbn: String!
    pageCount: Int!
    author: Author
}

input FilterInput {
    eq: Eq
    neq: Neq
    and: [FilterInput!]
    or: [FilterInput!]
}

input Eq {
    attribute: String!
    value: String!
}

input Neq {
    attribute: String!
    value: String!
}

enum Operator {
    AND
    OR
}

type Query {
    findBooks(where: FilterInput, operator: Operator, author: FilterInput): [Book]
    findAllBooks: [Book]!
    findAllAuthors: [Author]!
    countAuthors: Int!
    countBooks: Int!

    findBooks(orderBy: OrderBy): [Book]
}

input OrderBy {
    field: String!
    direction: String!
}