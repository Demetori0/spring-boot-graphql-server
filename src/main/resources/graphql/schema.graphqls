type Author {
    id: ID!
    firstName: String!
    lastName: String!
}

type Book {
    id: ID!
    title: String!
    isbn: String!
    pageCount: Int!
    author: Author
}

input FilterInput
{
    # scalar fields
    # ----------------------
    # Equals
    eq: [String!]
    # Not Equals
    ne: [String!]
    # Like
    like: [String!]
    # Less Than
    lt: [String!]

    # recursive operators
    # ----------------------
    and: [FilterInput!]
    or: [FilterInput!]

}

enum Operator {
    AND
    OR
}

input Options {
    orderBy: [String]!
    limit: Int
}

type Query {
    findBooks(where: FilterInput, operator: Operator = "AND", author: FilterInput, options: Options): [Book]
    findAllBooks: [Book]!
    countAuthors: Int!
    countBooks: Int!
}